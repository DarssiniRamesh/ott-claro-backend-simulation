{"is_source_file": true, "format": "TypeScript", "description": "A TypeScript file that defines an Item repository interface and implementation, including type definitions for item metadata and methods for fetching and updating items.", "external_files": ["mongoose", "./BaseRepository"], "external_methods": [], "published": ["IItem", "IItemRepository", "ItemRepository"], "classes": [{"name": "ItemRepository", "description": "Implementation of the IItemRepository interface, providing methods to interact with item data in a database."}], "methods": [{"name": "async findByType(type: string): Promise<IItem[]> { findByType", "description": "Returns a promise that resolves with an array of items of a specific type.", "scope": "ItemRepository", "scopeKind": "class"}, {"name": "async findByRegion(region: string): Promise<IItem[]> { findByRegion", "description": "Returns a promise that resolves with an array of items available in a specific region.", "scope": "ItemRepository", "scopeKind": "class"}, {"name": "async findAvailableItems(): Promise<IItem[]> { findAvailableItems", "description": "Returns a promise that resolves with an array of items that are currently available.", "scope": "ItemRepository", "scopeKind": "class"}, {"name": "async findByGenre(genre: string): Promise<IItem[]> { findByGenre", "description": "Returns a promise that resolves with an array of items that match a specific genre.", "scope": "ItemRepository", "scopeKind": "class"}, {"name": "async updateAvailability(id: string, isAvailable: boolean): Promise<IItem | null> { updateAvailability", "description": "Updates the availability status of an item specified by its ID and returns the updated item.", "scope": "ItemRepository", "scopeKind": "class"}, {"name": "async create(item: Partial<IItem>): Promise<IItem> { create", "description": "Overrides the create method to include validation for required item fields before creating a new item.", "scope": "ItemRepository", "scopeKind": "class"}, {"name": "constructor(model: Model<IItem>) { constructor", "scope": "ItemRepository", "scopeKind": "class", "description": "unavailable"}, {"name": "findAvailableItems(): Promise<IItem[]>; findAvailableItems", "scope": "IItemRepository", "scopeKind": "interface", "description": "unavailable"}, {"name": "findByGenre(genre: string): Promise<IItem[]>; findByGenre", "scope": "IItemRepository", "scopeKind": "interface", "description": "unavailable"}, {"name": "findByRegion(region: string): Promise<IItem[]>; findByRegion", "scope": "IItemRepository", "scopeKind": "interface", "description": "unavailable"}, {"name": "findByType(type: string): Promise<IItem[]>; findByType", "scope": "IItemRepository", "scopeKind": "interface", "description": "unavailable"}, {"name": "updateAvailability(id: string, isAvailable: boolean): Promise<IItem | null>; updateAvailability", "scope": "IItemRepository", "scopeKind": "interface", "description": "unavailable"}], "calls": ["this.find", "this.update", "super.create"], "search-terms": ["ItemRepository", "IItem", "IItemRepository"], "state": 2, "file_id": 41, "knowledge_revision": 230, "git_revision": "", "ctags": [{"_type": "tag", "name": "IItem", "path": "/home/kavia/workspace/ott-claro-backend-simulation/src/repositories/ItemRepository.ts", "pattern": "/^export interface IItem extends Document {$/", "language": "TypeScript", "kind": "interface"}, {"_type": "tag", "name": "IItemRepository", "path": "/home/kavia/workspace/ott-claro-backend-simulation/src/repositories/ItemRepository.ts", "pattern": "/^export interface IItemRepository extends IBaseRepository<IItem> {$/", "language": "TypeScript", "kind": "interface"}, {"_type": "tag", "name": "ItemRepository", "path": "/home/kavia/workspace/ott-claro-backend-simulation/src/repositories/ItemRepository.ts", "pattern": "/^export class ItemRepository extends BaseRepository<IItem> implements IItemRepository {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "assetUrl", "path": "/home/kavia/workspace/ott-claro-backend-simulation/src/repositories/ItemRepository.ts", "pattern": "/^  assetUrl: string;$/", "language": "TypeScript", "kind": "property", "scope": "IItem", "scopeKind": "interface"}, {"_type": "tag", "name": "constructor", "path": "/home/kavia/workspace/ott-claro-backend-simulation/src/repositories/ItemRepository.ts", "pattern": "/^  constructor(model: Model<IItem>) {$/", "language": "TypeScript", "kind": "method", "scope": "ItemRepository", "scopeKind": "class"}, {"_type": "tag", "name": "create", "path": "/home/kavia/workspace/ott-claro-backend-simulation/src/repositories/ItemRepository.ts", "pattern": "/^  async create(item: Partial<IItem>): Promise<IItem> {$/", "language": "TypeScript", "kind": "method", "scope": "ItemRepository", "scopeKind": "class"}, {"_type": "tag", "name": "findAvailableItems", "path": "/home/kavia/workspace/ott-claro-backend-simulation/src/repositories/ItemRepository.ts", "pattern": "/^  async findAvailableItems(): Promise<IItem[]> {$/", "language": "TypeScript", "kind": "method", "scope": "ItemRepository", "scopeKind": "class"}, {"_type": "tag", "name": "findAvailableItems", "path": "/home/kavia/workspace/ott-claro-backend-simulation/src/repositories/ItemRepository.ts", "pattern": "/^  findAvailableItems(): Promise<IItem[]>;$/", "language": "TypeScript", "kind": "method", "scope": "IItemRepository", "scopeKind": "interface"}, {"_type": "tag", "name": "findByGenre", "path": "/home/kavia/workspace/ott-claro-backend-simulation/src/repositories/ItemRepository.ts", "pattern": "/^  async findByGenre(genre: string): Promise<IItem[]> {$/", "language": "TypeScript", "kind": "method", "scope": "ItemRepository", "scopeKind": "class"}, {"_type": "tag", "name": "findByGenre", "path": "/home/kavia/workspace/ott-claro-backend-simulation/src/repositories/ItemRepository.ts", "pattern": "/^  findByGenre(genre: string): Promise<IItem[]>;$/", "language": "TypeScript", "kind": "method", "scope": "IItemRepository", "scopeKind": "interface"}, {"_type": "tag", "name": "findByRegion", "path": "/home/kavia/workspace/ott-claro-backend-simulation/src/repositories/ItemRepository.ts", "pattern": "/^  async findByRegion(region: string): Promise<IItem[]> {$/", "language": "TypeScript", "kind": "method", "scope": "ItemRepository", "scopeKind": "class"}, {"_type": "tag", "name": "findByRegion", "path": "/home/kavia/workspace/ott-claro-backend-simulation/src/repositories/ItemRepository.ts", "pattern": "/^  findByRegion(region: string): Promise<IItem[]>;$/", "language": "TypeScript", "kind": "method", "scope": "IItemRepository", "scopeKind": "interface"}, {"_type": "tag", "name": "findByType", "path": "/home/kavia/workspace/ott-claro-backend-simulation/src/repositories/ItemRepository.ts", "pattern": "/^  async findByType(type: string): Promise<IItem[]> {$/", "language": "TypeScript", "kind": "method", "scope": "ItemRepository", "scopeKind": "class"}, {"_type": "tag", "name": "findByType", "path": "/home/kavia/workspace/ott-claro-backend-simulation/src/repositories/ItemRepository.ts", "pattern": "/^  findByType(type: string): Promise<IItem[]>;$/", "language": "TypeScript", "kind": "method", "scope": "IItemRepository", "scopeKind": "interface"}, {"_type": "tag", "name": "isAvailable", "path": "/home/kavia/workspace/ott-claro-backend-simulation/src/repositories/ItemRepository.ts", "pattern": "/^  isAvailable: boolean;$/", "language": "TypeScript", "kind": "property", "scope": "IItem", "scopeKind": "interface"}, {"_type": "tag", "name": "metadata", "path": "/home/kavia/workspace/ott-claro-backend-simulation/src/repositories/ItemRepository.ts", "pattern": "/^  metadata: {$/", "language": "TypeScript", "kind": "property", "scope": "IItem", "scopeKind": "interface"}, {"_type": "tag", "name": "region", "path": "/home/kavia/workspace/ott-claro-backend-simulation/src/repositories/ItemRepository.ts", "pattern": "/^  region: string[];$/", "language": "TypeScript", "kind": "property", "scope": "IItem", "scopeKind": "interface"}, {"_type": "tag", "name": "thumbnailUrl", "path": "/home/kavia/workspace/ott-claro-backend-simulation/src/repositories/ItemRepository.ts", "pattern": "/^  thumbnailUrl?: string;$/", "language": "TypeScript", "kind": "property", "scope": "IItem", "scopeKind": "interface"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/ott-claro-backend-simulation/src/repositories/ItemRepository.ts", "pattern": "/^  title: string;$/", "language": "TypeScript", "kind": "property", "scope": "IItem", "scopeKind": "interface"}, {"_type": "tag", "name": "type", "path": "/home/kavia/workspace/ott-claro-backend-simulation/src/repositories/ItemRepository.ts", "pattern": "/^  type: string;$/", "language": "TypeScript", "kind": "property", "scope": "IItem", "scopeKind": "interface"}, {"_type": "tag", "name": "updateAvailability", "path": "/home/kavia/workspace/ott-claro-backend-simulation/src/repositories/ItemRepository.ts", "pattern": "/^  async updateAvailability(id: string, isAvailable: boolean): Promise<IItem | null> {$/", "language": "TypeScript", "kind": "method", "scope": "ItemRepository", "scopeKind": "class"}, {"_type": "tag", "name": "updateAvailability", "path": "/home/kavia/workspace/ott-claro-backend-simulation/src/repositories/ItemRepository.ts", "pattern": "/^  updateAvailability(id: string, isAvailable: boolean): Promise<IItem | null>;$/", "language": "TypeScript", "kind": "method", "scope": "IItemRepository", "scopeKind": "interface"}], "filename": "/home/kavia/workspace/ott-claro-backend-simulation/src/repositories/ItemRepository.ts", "hash": "b37927027d42bc3c5bc5139c25c7da52", "format-version": 4, "code-base-name": "default", "fields": [{"name": "export interface IItem extends Document {", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "export interface IItemRepository extends IBaseRepository<IItem> {", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "assetUrl: string;", "scope": "IItem", "scopeKind": "interface", "description": "unavailable"}, {"name": "isAvailable: boolean;", "scope": "IItem", "scopeKind": "interface", "description": "unavailable"}, {"name": "metadata: {", "scope": "IItem", "scopeKind": "interface", "description": "unavailable"}, {"name": "region: string[];", "scope": "IItem", "scopeKind": "interface", "description": "unavailable"}, {"name": "thumbnailUrl?: string;", "scope": "IItem", "scopeKind": "interface", "description": "unavailable"}, {"name": "title: string;", "scope": "IItem", "scopeKind": "interface", "description": "unavailable"}, {"name": "type: string;", "scope": "IItem", "scopeKind": "interface", "description": "unavailable"}], "revision_history": [{"230": ""}]}